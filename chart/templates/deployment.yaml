---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: po-chronicler-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: po-chronicler
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: po-chronicler
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: po-chronicler
    spec:
      serviceAccountName: chronicler-migration-waiter
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 1654
        runAsNonRoot: true
      initContainers:
        - name: wait-for-migration
          image: bitnami/kubectl:1.30.4
          resources:
            requests:
              cpu: 0.1
            limits:
              memory: 50Mi
              ephemeral-storage: "1Mi"
          command:
            - /bin/sh
            - -c
            - |
              kubectl wait --for=condition=complete job/${JOB_NAME} --timeout=300s -n {{ .Release.Namespace }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          env:
            - name: JOB_NAME
              value: po-chronicler-migrate-job-{{ .Values.image.tag | default .Chart.AppVersion | replace "." "-" }}
          volumeMounts:
            - name: service-account-token
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      containers:
        - name: po-chronicler
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          {{ include "limits" . | nindent 10 }}
          args:
            - "--serve"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          env:
            {{- include "database.config" . | nindent 12 }}
            {{- include "otlp.config" . | nindent 12 }}
            {{- include "networkConfig.environmentVariables" .Values.networkConfig | nindent 12 }}

            - name: chronicler__JobInterval
              value: {{ .Values.config.jobInterval }}

            - name: chronicler__SigningKeyFilename
              value: &signingKeyFilename /etc/secret/signing-key

            {{- range $i, $area := .Values.config.gridAreas }}
            - name: chronicler__GridAreas__{{ $i }}
              value: {{ $area }}
            {{- end }}
          volumeMounts:
            - name: service-account-token
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              readOnly: true
            - name: &signingKeyVolumeName signing-key-volume
              mountPath: *signingKeyFilename
              subPath: &signingKeyVolumePath signing-key
            {{- include "networkConfig.volumeMounts" .Values.networkConfig | nindent 12 }}
      volumes:
        - name: service-account-token
          projected:
            sources:
              - serviceAccountToken:
                  path: token
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt
        - name: *signingKeyVolumeName
          secret:
            secretName: {{ .Values.config.signingKeySecret.name }}
            items:
              - key: {{ .Values.config.signingKeySecret.key }}
                path: *signingKeyVolumePath
        {{- include "networkConfig.volumes" $ | nindent 8 }}
