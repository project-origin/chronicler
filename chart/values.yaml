# Default values for project-origin-chronicler.

# image defines the image configuration for the chronicler server
image:
  # repository defines the image repository to use
  repository: ghcr.io/project-origin/chronicler
  # tag defines the image tag to use, defaults to the chart appVersion
  tag:

# resources holds the configuration for the resource requests and limits
resources:
  # requests holds the configuration for the resource requests
  requests:
    # cpu defines the cpu request limit for the chronicler server
    cpu: 500m
    # memory defines the memory request limit for the chronicler server
    memory:

  # limits holds the configuration for the resource limits
  limits:
    # cpu defines the cpu limit for the chronicler server
    cpu:
    # memory defines the memory limit for the chronicler server
    memory: 200Mi

# service holds the configuration for the service
service:
  # type is the type of service to create, allowed values are (ClusterIP | LoadBalancer)
  type: ClusterIP
  # httpPort is the port to use for the http service
  httpPort: 5000
  # grpcPort is the port to use for the grpc service
  grpcPort: 5001

# replicaCount defines the number of replicas to run
replicaCount: 3

# config holds general configuration for the chronicler server
config:
  # signingKeySecret defines the secret that holds the signing key for the chronicler server
  signingKeySecret:
    name:
    key:

  # jobInterval defines the interval to run the job to check for new blocks on the regitries, defaults to 1h
  jobInterval: 01:00:00

  # gridAreas defines a list of grid areas to sign claimIntents for
  gridAreas:
    #- narnia

  # networkConfigurationUri defines an uri to fetch the network configuration from, allowed formats are json
  networkConfigurationUri: #https://raw.githubusercontent.com/project-origin/chronicler/main/configs/networkConfiguration.json

  # networkConfigurationFile defines the network configuration as a string in json format
  networkConfigurationFile: # |-
  #   {
  #     "RegistryUrls": {
  #       "narniaRegistry": "https://registry.narnia.example.com",
  #     }
  #   }

# postgresql holds the configuration for the postgresql database, each value is required and can be set directly, via a secretRef, or via a configMapRef
postgresql:
  # host defines the host of the postgresql database
  host:
    # secretRef:
    #   name:
    #   key:
    # configMapRef:
    #   name:
    #   key:
  # port defines the port of the postgresql database
  port: "5432"
    # secretRef:
    #   name:
    #   key:
    # configMapRef:
    #   name:
    #   key:
  # database defines the name of the postgresql database
  database:
    # secretRef:
    #   name:
    #   key:
    # configMapRef:
    #   name:
    #   key:
  # username defines the username to use to connect to the postgresql database
  username:
    # secretRef:
    #   name:
    #   key:
    # configMapRef:
    #   name:
    #   key:
  # password defines the password to use to connect to the postgresql database
  password:
    # secretRef:
    #   name:
    #   key:
    # configMapRef:
    #   name:
    #   key:

# otlp holds the configuration for the opentelemetry collector
otlp:
  # enabled determines if the opentelemetry collector is enabled
  enabled: false
  # endpoint defines the endpoint of the opentelemetry collector, example "http://otel-collector:4317"
  endpoint:
