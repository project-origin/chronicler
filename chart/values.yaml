# Default values for project-origin-chronicler.

# image defines the image configuration for the chronicler server
image:

  # repository defines the image repository to use
  repository: ghcr.io/project-origin/chronicler

  # tag defines the image tag to use, defaults to the chart appVersion
  tag:

# service holds the configuration for the service
service:
  # type is the type of service to create, allowed values are (ClusterIP | NodePort | LoadBalancer)
  type: ClusterIP
  # nodePort is the port to expose the service on if type is NodePort
  nodePort:

# config holds general configuration for the chronicler server
config:

  # pathBase defines the base part of all paths in the api of the chronicler server, defaults to /api
  pathBase: /api

# otlp holds the configuration for the opentelemetry collector
otlp:
  # enabled determines if the opentelemetry collector is enabled
  enabled: false
  # endpoint defines the endpoint of the opentelemetry collector, example "http://otel-collector:4317"
  endpoint: "http://opentelemetry-collector.otel-collector:4317"

messageBroker:
  # type defines the type of message broker to use, allowed values are (inMemory | rabbitmq | rabbitmqOperator)
  type:

  # rabbitmq defines the rabbitmq configuration for the message broker if type is rabbitmq, with rabbitmqOperator or inMemory this is ignored
  rabbitmq:
    # host defines the host of the rabbitmq server in url format 'http://localhost:15672/'
    host:
    # port defines the port of the rabbitmq server, defaults to 5672
    port: 5672
    # username defines the username to use to connect to the rabbitmq server
    username:
    # password defines the password to use to connect to the rabbitmq server
    password:

# chronicler defines the deployment configuration for the chronicler server
chronicler:
  # replicas defines the number of chronicler server instances to run
  replicaCount: 3

 # Registries is a list of all the known registries in the network
registries: []
  # example
  # - name: test
  #   address: http://test-registry:80

# persistence defines the persistence configuration for the chronicler server
persistence:

  # type defines which database to use. "CloudNativePG" for built-in PostgreSQL or "BYOD" (Bring Your Own Database) for using an external PostgreSQL database. Only PostgreSQL is supported.
  type: "CloudNativePG"

  # cloudNativePG determines if the database is created as a cloud native postgresql instance
  cloudNativePG:

    # name defines the name of the cloud native postgresql instance
    name: cnpg-chronicler-db

    # owner defines the owner of the database
    owner: app

    # database defines the name of the database to create
    database: chronicler-database

    # replicas defines the number of database instances to run
    replicas: 3

    # storage defines the storage configuration for the database
    size: 10Gi

  # BYOD (Bring Your Own Database) configuration
  byod:

    # Create a secret with the DB connection info and provide the secret name here
    secretName: ""
    # Specify the key within the secret that contains the DB connection string
    secretKey: ""
